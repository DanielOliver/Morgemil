trigger:
- master

variables:
  buildConfiguration: 'Release'

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- script: dotnet restore
  displayName: 'dotnet restore'
  workingDirectory: src

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'
  workingDirectory: src

- task: DotNetCoreCLI@2
  displayName: 'dotnet test $(buildConfiguration)'
  inputs:
    command: test
    projects: '**/*Tests/*.fsproj'
    arguments: '--configuration $(buildConfiguration) /p:AltCoverForce=true /p:AltCover=true /p:AltCoverPathFilter="Morgemil"'
    publishTestResults: true

- script: 'dotnet reportgenerator -reports:"../../**/coverage.xml" -targetdir:"../coveragereport" -reporttypes:"HTML;Cobertura"'
  displayName: 'dotnet reportgenerator'
  workingDirectory: src/Morgemil.Data.Tests


- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: cobertura
    summaryFileLocation: src/coveragereport/Cobertura.xml
    reportDirectory: src/coveragereport
    failIfCoverageEmpty: true
    
# - task: DotNetCoreCLI@2
#   displayName: 'dotnet publish game engine $(buildConfiguration)'
#   inputs:
#     command: publish
#     projects: src/Morgemil.GameEngine/Morgemil.GameEngine.fsproj
#     arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#     zipAfterPublish: True

# - task: PublishBuildArtifacts@1
#   displayName: 'publish artifacts'